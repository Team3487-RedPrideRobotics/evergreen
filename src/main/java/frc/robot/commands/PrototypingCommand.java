
// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// Hi!

package frc.robot.commands;

import java.util.Map;

import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.Constants;
import frc.robot.Robot;
import frc.robot.RobotContainer;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.Drive;
import frc.robot.subsystems.Prototyping;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class PrototypingCommand extends CommandBase {

    private Prototyping prototype;
    private XboxController xInput;

    public PrototypingCommand(Prototyping m_prototype){
        prototype = m_prototype;

    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
        prototype.setLeftX(RobotContainer.getInstance().getLeftXAxis());
        prototype.setLeftY(RobotContainer.getInstance().getLeftYAxis());
        prototype.setRightX(RobotContainer.getInstance().getRightXAxis());
        prototype.setRightY(RobotContainer.getInstance().getRightYAxis());
        if(RobotContainer.getInstance().getLeftTrigger() > RobotContainer.getInstance().getRightTrigger()){
            prototype.setTrigger(-RobotContainer.getInstance().getLeftTrigger());
        }else{
            prototype.setTrigger(RobotContainer.getInstance().getRightTrigger());
        }
        if(RobotContainer.getInstance().getLeftBumper()){
            prototype.setBumper(-1);
        }else if(RobotContainer.getInstance().getRightBumper()){
            prototype.setBumper(1);
        }
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return false;
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
