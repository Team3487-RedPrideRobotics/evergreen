// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.Constants;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.wpilibj2.command.button.Trigger;
import edu.wpi.first.wpilibj.Encoder;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.motorcontrol.Spark;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;



// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Prototyping extends SubsystemBase {
    private Spark spark_4 = new Spark(4);    
    private Spark spark_5 = new Spark(5);
    private Spark spark_6 = new Spark(6);
    private Spark spark_7 = new Spark(7);
    private Spark spark_8 = new Spark(8);
    private Spark spark_9 = new Spark(9);
    private SendableChooser<Spark> leftYChooser = new SendableChooser<Spark>();
    private SendableChooser<Spark> leftXChooser = new SendableChooser<Spark>();  
    private SendableChooser<Spark> RightYChooser = new SendableChooser<Spark>();
    private SendableChooser<Spark> RightXChooser = new SendableChooser<Spark>();
    private SendableChooser<Spark> TriggerChooser = new SendableChooser<Spark>();
    private SendableChooser<Spark> BumperChooser = new SendableChooser<Spark>();
    public Prototyping() {
        leftYChooser.setDefaultOption("Spark 4", spark_4);            
        leftYChooser.addOption("Spark 5", spark_5);        
        leftYChooser.addOption("Spark 6", spark_6);        
        leftYChooser.addOption("Spark 7", spark_7);        
        leftYChooser.addOption("Spark 8", spark_8);        
        leftYChooser.addOption("Spark 9", spark_9);        
        leftXChooser.setDefaultOption("Spark 4", spark_4);            
        leftXChooser.addOption("Spark 5", spark_5);        
        leftXChooser.addOption("Spark 6", spark_6);        
        leftXChooser.addOption("Spark 7", spark_7);        
        leftXChooser.addOption("Spark 8", spark_8);        
        leftXChooser.addOption("Spark 9", spark_9);
        RightYChooser.setDefaultOption("Spark 4", spark_4);            
        RightYChooser.addOption("Spark 5", spark_5);        
        RightYChooser.addOption("Spark 6", spark_6);        
        RightYChooser.addOption("Spark 7", spark_7);        
        RightYChooser.addOption("Spark 8", spark_8);        
        RightYChooser.addOption("Spark 9", spark_9);
        RightXChooser.setDefaultOption("Spark 4", spark_4);            
        RightXChooser.addOption("Spark 5", spark_5);        
        RightXChooser.addOption("Spark 6", spark_6);        
        RightXChooser.addOption("Spark 7", spark_7);        
        RightXChooser.addOption("Spark 8", spark_8);        
        RightXChooser.addOption("Spark 9", spark_9);

        Shuffleboard.getTab("Prototyping").add("Left X", leftXChooser);
        Shuffleboard.getTab("Prototyping").add("Right X", RightXChooser);                      
        Shuffleboard.getTab("Prototyping").add("Right Y", RightYChooser);
        Shuffleboard.getTab("Prototyping").add("Triggers", TriggerChooser);
        Shuffleboard.getTab("Prototyping").add("Bumpers", BumperChooser);               
        Shuffleboard.getTab("Prototyping").add("Left Y", leftYChooser);               
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void setLeftY(double speed){
        leftYChooser.getSelected().set(speed);
    }    
    public void setLeftX(double speed){
        leftXChooser.getSelected().set(speed);
    }
    public void setRightY(double speed){
        RightYChooser.getSelected().set(speed);
    }
    public void setRightX(double speed){
        RightXChooser.getSelected().set(speed);
    }
    public void setTrigger(double speed){
        TriggerChooser.getSelected().set(speed);
    }
    public void setBumper(double speed){
        BumperChooser.getSelected().set(speed);
    }
}

